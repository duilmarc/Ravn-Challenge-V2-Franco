{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/duilmarc/desarrollo/Ravn-Challenge-V2-Franco_Chavez/rvn-challenge/src/components/CharacterList/CharacterList.query.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useQuery } from '@apollo/client';\nimport \"./CharacterList.css\";\nimport CharacterList from \"./CharacterList\";\nimport { SHOWLIST } from \"./../../Apollo-Client/query\";\n\nfunction QueryList() {\n  _s();\n\n  const {\n    data,\n    error,\n    loading,\n    fetchMore\n  } = useQuery(SHOWLIST, {\n    notifyOnNetworkStatusChange: true\n  });\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading..\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: error.message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 21\n  }, this);\n  const registers = data.allPeople;\n  return /*#__PURE__*/_jsxDEV(CharacterList, {\n    loading: loading,\n    characters: registers,\n    onLoadMore: () => fetchMore({\n      query: SHOWLIST,\n      notifyOnNetworkStatusChange: true,\n      variables: {\n        cursor: entries.pageInfo.endCursor\n      },\n      updateQuery: (previousResult, {\n        fetchMoreResult\n      }) => {\n        const newEdges = fetchMoreResult.entries.edges;\n        const pageInfo = fetchMoreResult.entries.pageInfo;\n        return newEdges.length ? {\n          entries: {\n            __typename: previousResult.entries.__typename,\n            edges: [...previousResult.entries.edges, ...newEdges],\n            pageInfo\n          }\n        } : previousResult;\n      }\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 7\n  }, this);\n}\n\n_s(QueryList, \"p0PG+Bq78dwUdq5C7HYPLuqdRrc=\", false, function () {\n  return [useQuery];\n});\n\n_c = QueryList;\nexport default QueryList;\n\nvar _c;\n\n$RefreshReg$(_c, \"QueryList\");","map":{"version":3,"sources":["/home/duilmarc/desarrollo/Ravn-Challenge-V2-Franco_Chavez/rvn-challenge/src/components/CharacterList/CharacterList.query.js"],"names":["React","useQuery","CharacterList","SHOWLIST","QueryList","data","error","loading","fetchMore","notifyOnNetworkStatusChange","message","registers","allPeople","query","variables","cursor","entries","pageInfo","endCursor","updateQuery","previousResult","fetchMoreResult","newEdges","edges","length","__typename"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,OAAO,qBAAP;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAAQC,QAAR,QAAuB,6BAAvB;;AAGA,SAASC,SAAT,GAAqB;AAAA;;AACnB,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA,OAAf;AAAwBC,IAAAA;AAAxB,MAAqCP,QAAQ,CAACE,QAAD,EAAU;AAACM,IAAAA,2BAA2B,EAAE;AAA9B,GAAV,CAAnD;AACA,MAAIF,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAID,KAAJ,EAAW,oBAAO;AAAA,cAAIA,KAAK,CAACI;AAAV;AAAA;AAAA;AAAA;AAAA,UAAP;AAET,QAAMC,SAAS,GAAGN,IAAI,CAACO,SAAvB;AACA,sBACE,QAAC,aAAD;AACE,IAAA,OAAO,EAAEL,OADX;AAEE,IAAA,UAAU,EAAEI,SAFd;AAGE,IAAA,UAAU,EAAE,MACVH,SAAS,CAAC;AACRK,MAAAA,KAAK,EAAGV,QADA;AAERM,MAAAA,2BAA2B,EAAE,IAFrB;AAGRK,MAAAA,SAAS,EAAE;AACTC,QAAAA,MAAM,EAAEC,OAAO,CAACC,QAAR,CAAiBC;AADhB,OAHH;AAMRC,MAAAA,WAAW,EAAE,CAACC,cAAD,EAAiB;AAAEC,QAAAA;AAAF,OAAjB,KAAyC;AACpD,cAAMC,QAAQ,GAAGD,eAAe,CAACL,OAAhB,CAAwBO,KAAzC;AACA,cAAMN,QAAQ,GAAGI,eAAe,CAACL,OAAhB,CAAwBC,QAAzC;AACA,eAAOK,QAAQ,CAACE,MAAT,GACH;AACAR,UAAAA,OAAO,EAAE;AACLS,YAAAA,UAAU,EAAEL,cAAc,CAACJ,OAAf,CAAuBS,UAD9B;AAELF,YAAAA,KAAK,EAAE,CAAC,GAAGH,cAAc,CAACJ,OAAf,CAAuBO,KAA3B,EAAkC,GAAGD,QAArC,CAFF;AAGLL,YAAAA;AAHK;AADT,SADG,GAQHG,cARJ;AASD;AAlBO,KAAD;AAJb;AAAA;AAAA;AAAA;AAAA,UADF;AA4BH;;GAlCQhB,S;UACoCH,Q;;;KADpCG,S;AAsCT,eAAeA,SAAf","sourcesContent":["import React from \"react\";\nimport { useQuery } from '@apollo/client';\nimport \"./CharacterList.css\";\nimport CharacterList from \"./CharacterList\";\nimport {SHOWLIST} from \"./../../Apollo-Client/query\"\n\n\nfunction QueryList() {\n  const { data, error, loading, fetchMore} = useQuery(SHOWLIST,{notifyOnNetworkStatusChange: true,});  \n  if (loading) return <p>Loading..</p>\n  if (error) return <p>{error.message}</p>;\n    \n    const registers = data.allPeople ;\n    return (\n      <CharacterList\n        loading={loading}\n        characters={registers}\n        onLoadMore={() =>\n          fetchMore({\n            query : SHOWLIST,\n            notifyOnNetworkStatusChange: true,\n            variables: {\n              cursor: entries.pageInfo.endCursor\n            },\n            updateQuery: (previousResult, { fetchMoreResult }) => {\n              const newEdges = fetchMoreResult.entries.edges;\n              const pageInfo = fetchMoreResult.entries.pageInfo;\n              return newEdges.length\n                ? {\n                  entries: {\n                      __typename: previousResult.entries.__typename,\n                      edges: [...previousResult.entries.edges, ...newEdges],\n                      pageInfo\n                    }\n                  }\n                : previousResult;\n            }\n          })\n        }\n      />\n    );\n}\n\n\n\nexport default QueryList;"]},"metadata":{},"sourceType":"module"}